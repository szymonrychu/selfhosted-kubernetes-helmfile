prometheusOperator:
  manageCrds: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "kubernetes.io/hostname"
            operator: In
            values:
              - nuc1
              - nuc2
              - nuc3
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - kube-prometheus-stack-operator
        topologyKey: "kubernetes.io/hostname"
  admissionWebhooks:
    patch:
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 100Mi
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 32Mi
    
  prometheusConfigReloader:
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 200Mi

grafana:
  deploymentStrategy:
    type: Recreate
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    runAsUser: 1000
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "kubernetes.io/hostname"
            operator: In
            values:
              - nuc1
              - nuc2
              - nuc3
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - grafana
        topologyKey: "kubernetes.io/hostname"
  resources:
    requests:
      cpu: 10m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 384Mi
  persistence:
    type: pvc
    enabled: true
    storageClassName: local-path
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    hosts:
      - grafana.szymonrichert.pl
    path: /
    tls:
      - hosts:
        - grafana.szymonrichert.pl
        secretName: grafana-tls
  grafana.ini:
    auth:
      oauth_auto_login: true
    "auth.generic_oauth":
      enabled: true
      scopes: profile,email,groups,openid
      name: Keycloak
      allow_sign_up: false
      auth_url: https://auth.szymonrichert.pl/realms/Lab/protocol/openid-connect/auth
      token_url: https://auth.szymonrichert.pl/realms/Lab/protocol/openid-connect/token
      api_url: https://auth.szymonrichert.pl/realms/Lab/protocol/openid-connect/userinfo
      role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-dev') && 'Editor' || 'Viewer'
    server:
      root_url: https://grafana.szymonrichert.pl/
    smtp:
      enabled: true
      host: "pro.eu.turbo-smtp.com:465"
      from_address: "monitoring@szymonrichert.pl"
  
  additionalDataSources:
    - name: Loki
      editable: false
      orgId: 1
      access: proxy
      type: loki
      url: http://loki:3100
      version: 1
    - name: HomeAssistant
      editable: false
      orgId: 1
      access: proxy
      type: loki
      url: http://home-assistant-influxdb.home-assistant.svc.cluster.local:8086
      user: admin
      password: kheKGkxzizrWdFoHwg
      version: 1

alertmanager:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 10m
      memory: 100Mi
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  config:
    global:
      smtp_smarthost: "pro.eu.turbo-smtp.com:465"
      smtp_from: "monitoring@szymonrichert.pl"
  alertmanagerSpec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - alertmanager
          topologyKey: "kubernetes.io/hostname"


prometheus:
  service:
    sessionAffinity: "ClientIP"
  prometheusSpec:
    replicas: 3
    ruleSelector: {}
    ruleNamespaceSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    retentionSize: 100GB
    resources:
      limits:
        cpu: 500m
        memory: 3000Mi
      requests:
        cpu: 300m
        memory: 1536Mi
    storageSpec:
      volumeClaimTemplate:    
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: local-path
          resources:
            requests:
              storage: 100Gi

prometheus-node-exporter:
  hostNetwork: false