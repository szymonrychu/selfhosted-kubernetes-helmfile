defaultRules:
  create: false

prometheusOperator:
  manageCrds: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "kubernetes.io/hostname"
            operator: In
            values:
              - nuc1
              - nuc2
              - nuc3
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - kube-prometheus-stack-operator
        topologyKey: "kubernetes.io/hostname"
  admissionWebhooks:
    patch:
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 100Mi
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 32Mi

  prometheusConfigReloader:
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 200Mi

grafana:
  enabled: false

prometheus:
  service:
    sessionAffinity: "ClientIP"
  prometheusSpec:
    priorityClassName: system-cluster-critical
    replicas: 3
    ruleSelector: {}
    ruleNamespaceSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    retentionSize: 100GB
    resources:
      limits:
        cpu: 500m
        memory: 3000Mi
      requests:
        cpu: 300m
        memory: 1536Mi
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: local-path
          resources:
            requests:
              storage: 100Gi


prometheus-node-exporter:
  hostNetwork: false
  prometheus:
    monitor:
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace

alertmanager:
  enabled: false
