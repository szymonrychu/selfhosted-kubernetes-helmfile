hub:
  db:
    type: postgres
    url: postgresql+psycopg2://<db-username>:<db-password>@<db-hostname>:<db-port>/<db-name>
  config:
    JupyterHub:
      authenticator_class: generic-oauth
    GenericOAuthenticator:
      auto_login: true
      oauth_callback_url: https://jupyterhub.szymonrichert.pl/hub/oauth_callback
      authorize_url: https://auth.szymonrichert.pl/realms/master/protocol/openid-connect/auth
      token_url: https://auth.szymonrichert.pl/realms/master/protocol/openid-connect/token
      userdata_url: https://auth.szymonrichert.pl/realms/master/protocol/openid-connect/userinfo
      login_service: keycloak
      username_key: preferred_username
      userdata_params:
        state: state
      claim_groups_key: groups
      allowed_groups:
        - jupyterhub-user
      admin_groups:
        - jupyterhub-admin
      scope:
        - openid
        - profile
        - email
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi

scheduling:
  userScheduler:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
  userPlaceholder:
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi

prePuller:
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi
  hook:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
  hosts:
    - jupyterhub.szymonrichert.pl
  tls:
    - secretName: jupyterhub-tls
      hosts:
        - jupyterhub.szymonrichert.pl


proxy:
  service:
    type: ClusterIP

singleuser:
  defaultUrl: /lab
  image:
    name: jupyter/datascience-notebook
    tag: latest
  # initContainers:
  #   - name: setup-secrets
  #     image: szymonrychu/kubernetes-jupyter-notebook:0.0.2
  #     imagePullPolicy: IfNotPresent
  #     command:
  #       - bash
  #     args:
  #       - -ce
  #       - |
  #         cd /secrets
  #         gpg --import ./private.rsa
  #         cp ./kubeconfig /home/docker/.kube/config
  #         cp ./id_rsa ./id_rsa.pub ./known_hosts /home/docker/.ssh/
  #         chmod 0600 /home/docker/.kube/config /home/docker/.ssh/id_rsa
  #         cp cmc.key cmc.crt ca.crt ta.key /openvpn/
  #         cat <<EOF > /openvpn/client.conf
  #         client
  #         tls-client
  #         pull
  #         dev tun
  #         proto udp
  #         remote $(curl ifconfig.me) 1194 udp
  #         resolv-retry infinite
  #         nobind
  #         user nobody
  #         group nogroup
  #         persist-key
  #         persist-tun
  #         key-direction 1
  #         verb 3
  #         ca /data/vpn/ca.crt
  #         cert /data/vpn/cmc.crt
  #         key /data/vpn/cmc.key
  #         auth SHA512
  #         cipher AES-256-CBC
  #         link-mtu 1557
  #         pull-filter ignore "dhcp-option DNS"
  #         EOF
  #     volumeMounts:
  #       - name: worker-secrets
  #         mountPath: "/secrets"
  #         readOnly: true
  #       - name: kubeconfig
  #         mountPath: /home/docker/.kube
  #       - name: gnupg
  #         mountPath: /home/docker/.gnupg
  #       - name: ssh
  #         mountPath: /home/docker/.ssh
  #       - name: openvpn-certs
  #         mountPath: /openvpn
  # storage:
  #   extraVolumes:
  #     - name: worker-secrets
  #       secret:
  #         secretName: worker-secrets
  #     - name: kubeconfig
  #       emptyDir: {}
  #     - name: gnupg
  #       emptyDir: {}
  #     - name: ssh
  #       emptyDir: {}
  #     - name: openvpn-certs
  #       emptyDir: {}
  #   extraVolumeMounts:
  #     - name: kubeconfig
  #       mountPath: /home/docker/.kube
  #     - name: gnupg
  #       mountPath: /home/docker/.gnupg
  #     - name: ssh
  #       mountPath: /home/docker/.ssh
  #   type: static
  #   homeMountPath: /home/docker/Documents
  #   static:
  #     pvcName: jupyterhub-local-pvc
  #     subPath: ""
  profileList:
    # - description: szymonrychu/kubernetes-jupyter-notebook:0.0.2
    #   display_name: kubernetes
    #   kubespawner_override:
    #     image: szymonrychu/kubernetes-jupyter-notebook:0.0.2
    # - description: szymonrychu/ros-jupyter-notebook:0.0.1
    #   display_name: ros
    #   kubespawner_override:
    #     image: szymonrychu/ros-jupyter-notebook:0.0.1
    #     environment:
    #       ROS_HOSTNAME: cmc
    #       ROS_MASTER_URI: http://robot:11311
    - description: jupyter/datascience-notebook:latest
      display_name: datascience
      default: true