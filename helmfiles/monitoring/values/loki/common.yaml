loki:
  auth_enabled: false
  ingester:
    chunk_idle_period: 3m
    chunk_block_size: 262144
    chunk_retain_period: 1m
    max_transfer_retries: 0
    lifecycler:
      ring:
        kvstore:
          store: inmemory
        replication_factor: 1

      ## Different ring configs can be used. E.g. Consul
      # ring:
      #   store: consul
      #   replication_factor: 1
      #   consul:
      #     host: "consul:8500"
      #     prefix: ""
      #     http_client_timeout: "20s"
      #     consistent_reads: true
  limits_config:
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: 168h
  
  schema_config:
    configs:
    - from: 2020-10-24
      store: boltdb-shipper
      object_store: filesystem
      schema: v11
      index:
        prefix: index_
        period: 24h
      
  storage_config:
    boltdb_shipper:
      active_index_directory: /data/loki/boltdb-shipper-active
      cache_location: /data/loki/boltdb-shipper-cache
      cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
      shared_store: filesystem
    filesystem:
      directory: /data/loki/chunks
      
  # table_manager:
  #   retention_deletes_enabled: true
  #   retention_period: 168h
  
  compactor:
    working_directory: /data/loki/boltdb-shipper-compactor
    shared_store: filesystem
  # Needed for Alerting: https://grafana.com/docs/loki/latest/alerting/
  # This is just a simple example, for more details: https://grafana.com/docs/loki/latest/configuration/#ruler_config
  #  ruler:
  #    storage:
  #      type: local
  #      local:
  #        directory: /rules
  #    rule_path: /tmp/scratch
  #    alertmanager_url: http://alertmanager.svc.namespace:9093
  #    ring:
  #      kvstore:
  #        store: inmemory
  #    enable_api: true

  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  nodeSelector: {}

  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ## If you set enabled as "True", you need :
  ## - create a pv which above 10Gi and has same namespace with loki
  ## - keep storageClassName same with below setting

  ## Pod Labels
  podLabels: {}

  ## Pod Annotations
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "http-metrics"

  podManagementPolicy: OrderedReady

  ## Assign a PriorityClassName to pods if set
  # priorityClassName:

  rbac:
    create: true
    pspEnabled: true

  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45

  replicas: 3

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  write:
    affinity: |
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.writeSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 10Gi
      storageClass: local-path
  read:
    affinity: |
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.readSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 10Gi
      storageClass: local-path

  singleBinary:
    affinity: |
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.singleBinarySelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 10Gi
      storageClass: local-path

  backend:
    affinity: |
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.singleBinarySelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 10Gi
      storageClass: local-path

  gateway:
    affinity: |
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - nuc1
                - nuc2
                - nuc3
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.gatewaySelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname

promtail:
  enabled: true
  # Add additional scrape config
  extraScrapeConfigs:
    - job_name: journal
      journal:
        path: /var/log/journal
        max_age: 12h
        labels:
          job: systemd-journal
      relabel_configs:
        - source_labels: ['__journal__systemd_unit']
          target_label: 'unit'
        - source_labels: ['__journal__hostname']
          target_label: 'hostname'

  # Mount journal directory into promtail pods
  extraVolumes:
    - name: journal
      hostPath:
        path: /var/log/journal

  extraVolumeMounts:
    - name: journal
      mountPath: /var/log/journal
      readOnly: true
  
  podLabels:
    application: promtail

  # affinity: |
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: "kubernetes.io/hostname"
  #           operator: In
  #           values:
  #             - nuc1
  #             - nuc2
  #             - nuc3
  #   podAntiAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       - labelSelector:
  #           matchExpressions:
  #             - key: application
  #               operator: In
  #               values:
  #               - promtail
  #         topologyKey: kubernetes.io/hostname

grafana:
  enabled: false

prometheus:
  enabled: false