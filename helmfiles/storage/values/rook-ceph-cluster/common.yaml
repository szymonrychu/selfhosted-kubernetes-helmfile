operatorNamespace: rook-ceph

monitoring:
  enabled: true

toolbox:
  enabled: true
  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 2016
    runAsGroup: 2016
    capabilities:
      drop: ["ALL"]
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "50m"
      memory: "128Mi"

cephClusterSpec:
  network:
    connections:
      provider: host
  placement:
    all:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
              - nuc1
              - nuc2
              - nuc3
              - nuc4
  mon:
    count: 3
    allowMultiplePerNode: false
    volumeClaimTemplate:
      spec:
        storageClassName: local-path
        resources:
          requests:
            storage: 10Gi
  mgr:
    count: 1
    modules:
      - name: pg_autoscaler
        enabled: true
  crashCollector:
    disable: false
  dashboard:
    enabled: false
  storage:
    onlyApplyOSDPlacement: false
    storageClassDeviceSets:
      - name: data
        count: 4
        portable: false
        tuneDeviceClass: true
        tuneFastDeviceClass: false
        encrypted: false
        placement:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - rook-ceph-osd
                      - rook-ceph-osd-prepare
        preparePlacement:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - rook-ceph-osd
                      - key: app
                        operator: In
                        values:
                          - rook-ceph-osd-prepare
                  topologyKey: kubernetes.io/hostname
        volumeClaimTemplates:
          - metadata:
              name: data
              # if you are looking at giving your OSD a different CRUSH device class than the one detected by Ceph
              # annotations:
              #   crushDeviceClass: hybrid
            spec:
              resources:
                requests:
                  storage: 10Gi
              # IMPORTANT: Change the storage class depending on your environment
              storageClassName: block-storage
              volumeMode: Block
              accessModes:
                - ReadWriteOnce
  priorityClassNames:
    mon: system-node-critical
    osd: system-node-critical
    mgr: system-cluster-critical
  disruptionManagement:
    managePodBudgets: true
    osdMaintenanceTimeout: 30
    pgHealthCheckTimeout: 0
  resources:
    mgr:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "1000m"
        memory: "1Gi"
    mon:
      requests:
        cpu: "50m"
        memory: "396Mi"
      limits:
        cpu: "1000m"
        memory: "1Gi"
    osd:
      requests:
        cpu: "100m"
        memory: "796Mi"
      limits:
        cpu: "2000m"
        memory: "4Gi"
    mgr-sidecar:
      limits:
        cpu: "200m"
        memory: "100Mi"
      requests:
        cpu: "100m"
        memory: "40Mi"
    crashcollector:
      limits:
        cpu: "20m"
        memory: "60Mi"
      requests:
        cpu: "5m"
        memory: "60Mi"
    logcollector:
      limits:
        cpu: "20m"
        memory: "60Mi"
      requests:
        cpu: "5m"
        memory: "60Mi"
    cleanup:
      limits:
        cpu: "500m"
        memory: "1Gi"
      requests:
        cpu: "200m"
        memory: "100Mi"

cephFileSystems:
  - name: ceph-fs
    spec:
      metadataPool:
        replicated:
          size: 3
      dataPools:
        - name: replicated
          failureDomain: host
          replicated:
            size: 3
            requireSafeReplicaSize: true
          parameters:
            compression_mode:
              none
      metadataServer:
        activeCount: 1
        activeStandby: true
        resources:
          requests:
            cpu: "10m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        priorityClassName: system-cluster-critical
    storageClass:
      enabled: true
      isDefault: true
      name: ceph
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      fsName: ceph-fs
      pool: replicated
      parameters:
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
        csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
        csi.storage.k8s.io/fstype: ext4

cephBlockPools: []

cephObjectStores: []
