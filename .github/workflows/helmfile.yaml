name: Helmfile

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}

env:
  TERRAFORM_VERSION: 1.8.2

jobs:
  terraform:
    runs-on: [self-hosted, linux, X64]
    name: Terraform Plan
    steps:
      - name: Setup terraform
        run: |
          wget -qO /tmp/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip -u -d /tmp/ /tmp/terraform.zip
          sudo mv /tmp/terraform /usr/local/bin/terraform

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Terraform init
        env:
          TERRAFORM_TFVARS: ${{ secrets.TERRAFORM_TFVARS }}
        run: |
          cd terraform
          echo "${TERRAFORM_TFVARS}" | base64 --decode > terraform.tfvars
          terraform init

      - name: Terraform plan
        if: github.ref != 'refs/heads/main'
        run: |
          cd terraform
          terraform plan -lock-timeout=600s

      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve -lock-timeout=600s

  list_changed_releases:
    runs-on: ubuntu-latest
    needs: terraform
    name: List changed releases
    outputs:
      changed_releases: ${{ steps.changed_releases.outputs.changed_releases }}
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
          token: "${{ secrets.SZYMONRYCHU_TOKEN }}"

      - name: Get all test, doc and src files that have changed
        id: changed_files
        uses: tj-actions/changed-files@cc733854b1f224978ef800d29e4709d5ee2883e4 # v44
        with:
          json: true
          escape_json: false

      - name: Filter release names
        id: changed_releases
        run: |
          ./.github/get_changed_releases.py '${{ steps.changed_files.outputs.all_changed_files }}' >> "$GITHUB_OUTPUT"

  build:
    runs-on: [self-hosted, linux, X64]
    name: ${{ matrix.helmfile_label }}
    needs: list_changed_releases
    if: needs.list_changed_releases.outputs.changed_releases != '[]'
    strategy:
      fail-fast: true
      matrix:
        helmfile_label: ${{ fromJson(needs.list_changed_releases.outputs.changed_releases) }}
    steps:

    - name: Turnstyle
      if: github.ref == 'refs/heads/main'
      uses: softprops/turnstyle@a4aad77d10d0bc4fa51eb6beda0a63ed9741d7ca # v2
      with:
        continue-after-seconds: 1200
        poll-interval-seconds: 60
      env:
        GITHUB_TOKEN: ${{ secrets.SZYMONRYCHU_TOKEN }}

    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        token: "${{ secrets.SZYMONRYCHU_TOKEN }}"

    - name: helmfile diff
      if: github.ref != 'refs/heads/main'
      env:
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        set -e
        echo $ENCRYPTION_KEY | base64 --decode > encryption_key.gpg
        gpg --import encryption_key.gpg
        helmfile --selector ${{ matrix.helmfile_label }} diff --include-needs

    - name: helmfile apply
      if: github.ref == 'refs/heads/main'
      env:
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        set -e
        echo $ENCRYPTION_KEY | base64 --decode > encryption_key.gpg
        gpg --import encryption_key.gpg
        helmfile --selector ${{ matrix.helmfile_label }} apply --include-needs

  helmfile_completed:
    needs: [build]
    name: Helmfile Completed
    runs-on: ubuntu-latest
    steps:
      - name: complete message
        run: echo "Completed"
