tls:
  enabled: true
  autoGenerated: true
  usePem: true

production: true
replicaCount: 3
resources:
  requests:
    memory: 512Mi
    cpu: 100m
  limits:
    memory: 3Gi
    cpu: 750m

proxy: edge

priorityClassName: system-cluster-critical

extraEnvVars:
- name: KC_HOSTNAME_URL
  value: https://auth.szymonrichert.pl/
- name: KC_HOSTNAME_ADMIN_URL
  value: https://auth.szymonrichert.pl/
- name: KEYCLOAK_ENABLE_HTTPS
  value: "false"

podLabels:
  application: keycloak

  # https://github.com/nkelemen18/koreui/releases/download/22.0.0/koreui-22.0.0.jar
  # /opt/bitnami/keycloak/providers/

extraVolumes:
  - name: providers
    emptyDir: {}

extraVolumeMounts:
  - mountPath: /opt/bitnami/keycloak/providers/
    name: providers

initContainers:
  - name: init-copy-providers
    image: docker.io/bitnami/keycloak:24.0.4-debian-12-r0
    imagePullPolicy: IfNotPresent
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    command: [ bash ]
    args:
      - -c
      - cp -R /opt/bitnami/keycloak/providers/ /providers/
    volumeMounts:
    - mountPath: /providers
      name: providers

  - name: koreui-download
    image: busybox:1.36.1-glibc
    imagePullPolicy: IfNotPresent
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    command: [ sh ]
    args:
      - -c
      - 'wget -O /providers/koreui.jar https://github.com/nkelemen18/koreui/releases/download/22.0.0/koreui-22.0.0.jar'
    volumeMounts:
    - mountPath: /providers
      name: providers


affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "kubernetes.io/hostname"
          operator: In
          values:
            - nuc1
            - nuc2
            - nuc3
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: application
          operator: In
          values:
          - keycloak
      topologyKey: "kubernetes.io/hostname"

service:
  type: ClusterIP
  sessionAffinity: ClientIP

ingress:
  enabled: true
  ingressClassName: nginx
  hostname: auth.szymonrichert.pl
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    "nginx.ingress.kubernetes.io/proxy-buffer-size": "128k"
  tls: true

pdb:
  create: true

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    endpoints:
      - path: /metrics
      - path: /realms/master/metrics
      - path: /realms/Lab/metrics
  prometheusRule:
    enabled: true

externalDatabase:
  host: keycloak-database-cluster-rw
  port: 5432
  user: keycloak
  database: keycloak
  existingSecret: keycloak-database-cluster-app
  existingSecretPasswordKey: password

postgresql:
  enabled: false

cache:
  enabled: true
