---
- name: "Install server OpenVPN packages"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - openvpn
    - easy-rsa

- name: Ensure /etc/openvpn/easy-rsa exists
  ansible.builtin.file:
    path: /etc/openvpn/easy-rsa
    state: directory
    mode: "0755"

- name: Ensure /etc/openvpn/ccd exists
  ansible.builtin.file:
    path: /etc/openvpn/ccd
    state: directory
    mode: "0755"

- name: Easyrsa init-pki
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa init-pki"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki

- name: Easyrsa build-ca
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa build-ca nopass"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/ca.crt
  environment:
    EASYRSA_BATCH: "yes"

- name: Easyrsa gen-dh
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa gen-dh"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/dh.pem

- name: Easyrsa build-server-full server nopass
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa build-server-full server nopass"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/server.crt

- name: Easyrsa build-client-full client nopass
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa build-client-full client nopass"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/client.crt

- name: Easyrsa build-client-full additional clients nopass
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa build-client-full {{ item.key }} nopass"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/{{ item.key }}.crt
  with_dict: "{{ vpn_static_client_dict }}"

- name: Easyrsa gen-crl
  ansible.builtin.command:
    cmd: "{{ openvpn_easyrsa_path }}/easyrsa gen-crl"
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/crl.pem

- name: Openvpn --genkey --secret /etc/openvpn/easy-rsa/pki/ta.key
  ansible.builtin.command:
    cmd: openvpn --genkey --secret /etc/openvpn/easy-rsa/pki/ta.key
    creates: /etc/openvpn/easy-rsa/pki/ta.key

- name: Copy files to /etc/openvpn/server
  ansible.builtin.copy:
    src: /etc/openvpn/easy-rsa/pki/{{ item }}
    dest: /etc/openvpn/server/{{ item | basename }}
    mode: "0640"
    remote_src: yes
  loop:
    - ca.crt
    - dh.pem
    - ta.key
    - issued/client.crt
    - issued/server.crt
    - private/ca.key
    - private/client.key
    - private/server.key

- name: Copy client certs
  ansible.builtin.copy:
    src: /etc/openvpn/easy-rsa/pki/issued/{{ item.key }}.crt
    dest: /etc/openvpn/server/{{ item.key }}.crt
    mode: "0640"
    remote_src: yes
  with_dict: "{{ vpn_static_client_dict }}"
  notify:
    - Restart OpenVPN server

- name: Copy client keys
  ansible.builtin.copy:
    src: /etc/openvpn/easy-rsa/pki/private/{{ item.key }}.key
    dest: /etc/openvpn/server/{{ item.key }}.key
    mode: "0640"
    remote_src: yes
  with_dict: "{{ vpn_static_client_dict }}"
  notify:
    - Restart OpenVPN server

- name: Create client ccds
  ansible.builtin.template:
    src: ccd.j2
    dest: "/etc/openvpn/ccd/{{ item.key }}"
    owner: root
    group: "{{ openvpn_group }}"
    mode: "0640"
  vars:
    static_ip: "{{ item.value }}"
  with_dict: "{{ vpn_static_client_dict }}"
  notify:
    - Restart OpenVPN server

- name: Enable net.ipv4.ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: Place server.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ openvpn_configuration_directory }}/server.conf"
    owner: root
    group: "{{ openvpn_group }}"
    mode: "0640"
  notify:
    - Restart OpenVPN server

- name: Create iptablesvpn service
  ansible.builtin.template:
    src: iptablesvpn.service.j2
    dest: /etc/systemd/system/iptablesvpn.service
    owner: root
    group: root
    mode: "0640"
  notify:
    - restart iptablesvpn

- name: Fetch ca.crt and ta.key from OpenVPN server
  run_once: true
  fetch:
    src: /etc/openvpn/easy-rsa/pki/{{ item }}
    dest: buffer/openvpn/{{ item | basename }}
    flat: yes
  loop:
    - ca.crt
    - ta.key
    - issued/client.crt
    - private/client.key

- name: Fetch client keys from OpenVPN server
  run_once: true
  fetch:
    src: /etc/openvpn/easy-rsa/pki/private/{{ item.key }}.key
    dest: buffer/openvpn/{{ item.key }}.key
    flat: yes
  with_dict: "{{ vpn_static_client_dict }}"

- name: Fetch client certs from OpenVPN server
  run_once: true
  fetch:
    src: /etc/openvpn/easy-rsa/pki/issued/{{ item.key }}.crt
    dest: buffer/openvpn/{{ item.key }}.crt
    flat: yes
  with_dict: "{{ vpn_static_client_dict }}"